/*
 * auction-server
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.14.0
 *
 * Generated by: https://openapi-generator.tech
 */

use {
    crate::models,
    serde::{
        Deserialize,
        Serialize,
    },
};

/// Limo : Limo program specific parameters for the opportunity. It contains the Limo order to be executed, encoded in base64. SDKs will decode this order and create transaction for bidding on the opportunity.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Limo {
    /// The Limo order to be executed, encoded in base64.
    #[serde(rename = "order")]
    pub order:         String,
    /// Address of the order account.
    #[serde(rename = "order_address")]
    pub order_address: String,
    #[serde(rename = "program")]
    pub program:       Program,
}

impl Limo {
    /// Limo program specific parameters for the opportunity. It contains the Limo order to be executed, encoded in base64. SDKs will decode this order and create transaction for bidding on the opportunity.
    pub fn new(order: String, order_address: String, program: Program) -> Limo {
        Limo {
            order,
            order_address,
            program,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Program {
    #[serde(rename = "limo")]
    Limo,
}

impl Default for Program {
    fn default() -> Program {
        Self::Limo
    }
}
