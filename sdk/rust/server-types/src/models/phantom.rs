/*
 * auction-server
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.14.0
 *
 * Generated by: https://openapi-generator.tech
 */

use {
    crate::models,
    serde::{
        Deserialize,
        Serialize,
    },
};

/// Phantom : Phantom program specific parameters for the opportunity.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Phantom {
    /// The maximum slippage percentage that the user is willing to accept.
    #[serde(rename = "maximum_slippage_percentage")]
    pub maximum_slippage_percentage: f64,
    #[serde(rename = "program")]
    pub program:                     Program,
    /// The user wallet address which requested the quote from the wallet.
    #[serde(rename = "user_wallet_address")]
    pub user_wallet_address:         String,
}

impl Phantom {
    /// Phantom program specific parameters for the opportunity.
    pub fn new(
        maximum_slippage_percentage: f64,
        program: Program,
        user_wallet_address: String,
    ) -> Phantom {
        Phantom {
            maximum_slippage_percentage,
            program,
            user_wallet_address,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Program {
    #[serde(rename = "phantom")]
    Phantom,
}

impl Default for Program {
    fn default() -> Program {
        Self::Phantom
    }
}
