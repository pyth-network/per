/*
 * auction-server
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.14.0
 *
 * Generated by: https://openapi-generator.tech
 */

use {
    crate::models,
    serde::{
        Deserialize,
        Serialize,
    },
};

/// OpportunityCreateV1Svm : Opportunity parameters needed for on-chain execution. Parameters may differ for each program.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OpportunityCreateV1Svm {
    /// The Limo order to be executed, encoded in base64.
    #[serde(rename = "order")]
    pub order:                       String,
    /// Address of the order account.
    #[serde(rename = "order_address")]
    pub order_address:               String,
    #[serde(rename = "program")]
    pub program:                     Program,
    /// The maximum slippage percentage that the user is willing to accept.
    #[serde(rename = "maximum_slippage_percentage")]
    pub maximum_slippage_percentage: f64,
    /// The user wallet address which requested the quote from the wallet.
    #[serde(rename = "user_wallet_address")]
    pub user_wallet_address:         String,
    #[serde(rename = "buy_tokens")]
    pub buy_tokens:                  Vec<models::TokenAmountSvm>,
    /// The chain id where the opportunity will be executed.
    #[serde(rename = "chain_id")]
    pub chain_id:                    String,
    /// The permission account to be permitted by the ER contract for the opportunity execution of the protocol.
    #[serde(rename = "permission_account")]
    pub permission_account:          String,
    /// The router account to be used for the opportunity execution of the protocol.
    #[serde(rename = "router")]
    pub router:                      String,
    #[serde(rename = "sell_tokens")]
    pub sell_tokens:                 Vec<models::TokenAmountSvm>,
    /// The slot where the program params were fetched from using the RPC.
    #[serde(rename = "slot")]
    pub slot:                        i64,
}

impl OpportunityCreateV1Svm {
    /// Opportunity parameters needed for on-chain execution. Parameters may differ for each program.
    pub fn new(
        order: String,
        order_address: String,
        program: Program,
        maximum_slippage_percentage: f64,
        user_wallet_address: String,
        buy_tokens: Vec<models::TokenAmountSvm>,
        chain_id: String,
        permission_account: String,
        router: String,
        sell_tokens: Vec<models::TokenAmountSvm>,
        slot: i64,
    ) -> OpportunityCreateV1Svm {
        OpportunityCreateV1Svm {
            order,
            order_address,
            program,
            maximum_slippage_percentage,
            user_wallet_address,
            buy_tokens,
            chain_id,
            permission_account,
            router,
            sell_tokens,
            slot,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Program {
    #[serde(rename = "phantom")]
    Phantom,
}

impl Default for Program {
    fn default() -> Program {
        Self::Phantom
    }
}
