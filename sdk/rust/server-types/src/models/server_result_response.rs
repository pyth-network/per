/*
 * auction-server
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.14.0
 *
 * Generated by: https://openapi-generator.tech
 */

use {
    crate::models,
    serde::{
        Deserialize,
        Serialize,
    },
};

/// ServerResultResponse : This enum is used to send the result for a specific client request with the same id. Id is only None when the client message is invalid.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ServerResultResponse {
    #[serde(rename = "result")]
    pub result: String,
    #[serde(rename = "status")]
    pub status: Status,
    #[serde(
        rename = "id",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub id:     Option<Option<String>>,
}

impl ServerResultResponse {
    /// This enum is used to send the result for a specific client request with the same id. Id is only None when the client message is invalid.
    pub fn new(result: String, status: Status) -> ServerResultResponse {
        ServerResultResponse {
            result,
            status,
            id: None,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "error")]
    Error,
}

impl Default for Status {
    fn default() -> Status {
        Self::Error
    }
}
