/*
 * auction-server
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.14.0
 *
 * Generated by: https://openapi-generator.tech
 */

use {
    crate::models,
    serde::{
        Deserialize,
        Serialize,
    },
};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V17 {
    /// The chain id for the quote.
    #[serde(rename = "chain_id")]
    pub chain_id:                    String,
    /// The expiration time of the quote (in seconds since the Unix epoch).
    #[serde(rename = "expiration_time")]
    pub expiration_time:             i64,
    #[serde(rename = "input_token")]
    pub input_token:                 models::TokenAmountSvm,
    /// The maximum slippage percentage that the user is willing to accept.
    #[serde(rename = "maximum_slippage_percentage")]
    pub maximum_slippage_percentage: f64,
    #[serde(rename = "output_token")]
    pub output_token:                models::TokenAmountSvm,
    /// The signed transaction for the quote to be executed on chain which is valid until the expiration time.
    #[serde(rename = "transaction")]
    pub transaction:                 String,
    #[serde(rename = "version")]
    pub version:                     Version,
}

impl V17 {
    pub fn new(
        chain_id: String,
        expiration_time: i64,
        input_token: models::TokenAmountSvm,
        maximum_slippage_percentage: f64,
        output_token: models::TokenAmountSvm,
        transaction: String,
        version: Version,
    ) -> V17 {
        V17 {
            chain_id,
            expiration_time,
            input_token,
            maximum_slippage_percentage,
            output_token,
            transaction,
            version,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Version {
    #[serde(rename = "v1")]
    V1,
}

impl Default for Version {
    fn default() -> Version {
        Self::V1
    }
}
